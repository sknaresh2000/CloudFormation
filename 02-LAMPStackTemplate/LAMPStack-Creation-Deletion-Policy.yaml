AWSTemplateFormatVersion: 2010-09-09

Description: This template creates Amazon Linux EC2 Instance, RDS instance and installs wordpress on top of Apache and PHP

Parameters: 
  EnvironmentSize:
    Type: String
    Default: SMALL
    AllowedValues:
     - SMALL
     - MEDIUM
     - LARGE
    Description: Please provide the environment size
  KeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: Please provide the key pair for EC2 Instance
  DBUserName:
    Type: String
    Description: Please provide the DB User Name
  DBPassword:
    Type: String
    Description: Please provide the DB Password
    NoEcho: true
  DatabaseName:
    Type: String
    Description: Please provide the DB Name

Mappings: 
  Type:
    SMALL:
      EC2: t2.micro
      DB2: db.t2.micro
    MEDIUM:
      EC2: t2.medium
      DB2: db.t2.medium
    LARGE:
      EC2: t2.large
      DB2: db.t2.large
  Region:
    us-east-2:
      AMIInfo: ami-0e01ce4ee18447327

Resources: 
  RDS:
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: Snapshot
    Properties:
      DBInstanceClass: !FindInMap [ Type , !Ref EnvironmentSize, DB2 ]
      StorageType: gp2
      Engine: MySQL
      DBName: !Ref DatabaseName
      MasterUsername: !Ref DBUserName
      MasterUserPassword: !Ref DBPassword
      AllocatedStorage: 5
  EC2Instance:
    Type: "AWS::EC2::Instance"
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT10M
    Properties:
      KeyName: !Ref KeyName
      ImageId: !FindInMap [ Region, !Ref "AWS::Region" ,AMIInfo ]
      InstanceType: !FindInMap [ Type , !Ref EnvironmentSize, EC2 ]
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            yum update -y aws-cfn-bootstrap
            yum update -y
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --region ${AWS::Region} --resource EC2Instance --configsets wordpress
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --region ${AWS::Region} --resource EC2Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          wordpress:
            - installwp
            - configurecfn
            - configurewp
        installwp:
          packages:
            yum:
              httpd: []
              php: []
              php-mysql: []
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
          sources:
            /var/www/html: "https://wordpress.org/wordpress-5.0.8.tar.gz"
        
        configurewp:
          commands:
            wp_config:
              command: !Sub | 
                cp wp-config-sample.php wp-config.php
                sed -i 's/database_name_here/${DatabaseName}/g' wp-config.php
                sed -i 's/localhost/${RDS.Endpoint.Address}/g' wp-config.php
                sed -i 's/username_here/${DBUserName}/g' wp-config.php
                sed -i 's/password_here/${DBPassword}/g' wp-config.php
              cwd: "/var/www/html/wordpress"
        configurecfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=1
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-reload.conf:
              content: !Sub |
                [cfn-auto-reload]
                triggers=post.update
                path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --region ${AWS::Region} --resource EC2Instance --configsets wordpress
              mode: "000400"
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                 - "/etc/cfn/hooks.d/cfn-reload.conf"
                 - "/etc/cfn/cfn-hup.conf"
Outputs:
  URL:
    Description: "Wordpress URL"
    Value: !Join ["",["http://",!GetAtt EC2Instance.PublicIp,"/wordpress"]]